{"$message_type":"diagnostic","message":"function `qlog` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":425,"byte_end":429,"line_start":24,"line_end":24,"column_start":4,"column_end":8,"is_primary":true,"text":[{"text":"fn qlog() {","highlight_start":4,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `qlog` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:24:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn qlog() {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"field `0` is never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":596,"byte_end":599,"line_start":33,"line_end":33,"column_start":5,"column_end":8,"is_primary":false,"text":[{"text":"    Set(Vec<Var>),    //Lists","highlight_start":5,"highlight_end":8}],"label":"field in this variant","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":600,"byte_end":608,"line_start":33,"line_end":33,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    Set(Vec<Var>),    //Lists","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`Var` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider changing the field to be of unit type to suppress this warning while preserving the field numbering, or remove the field","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":600,"byte_end":608,"line_start":33,"line_end":33,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    Set(Vec<Var>),    //Lists","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"()","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: field `0` is never read\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:33:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Set(Vec<Var>),    //Lists\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfield in this variant\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `Var` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider changing the field to be of unit type to suppress this warning while preserving the field numbering, or remove the field\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    Set(\u001b[0m\u001b[0m\u001b[38;5;10m()\u001b[0m\u001b[0m),    //Lists\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[38;5;10m~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `bool` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":624,"byte_end":632,"line_start":35,"line_end":35,"column_start":1,"column_end":9,"is_primary":false,"text":[{"text":"impl Var {","highlight_start":1,"highlight_end":9}],"label":"method in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":642,"byte_end":646,"line_start":36,"line_end":36,"column_start":8,"column_end":12,"is_primary":true,"text":[{"text":"    fn bool(&self) -> bool {","highlight_start":8,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `bool` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:36:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl Var {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmethod in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn bool(&self) -> bool {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `if let` can be collapsed into the outer `if let`","code":{"code":"clippy::collapsible_match","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":1567,"byte_end":1670,"line_start":69,"line_end":71,"column_start":21,"column_end":42,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":21,"highlight_end":61},{"text":"                    ","highlight_start":1,"highlight_end":21},{"text":"                    else {panic!(\"test\")}","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":6274,"byte_end":6317,"line_start":206,"line_end":206,"column_start":32,"column_end":75,"is_primary":false,"text":[{"text":"                            if unpack_var!(Linear, stack.front().unwrap()) > 0.0 {","highlight_start":32,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the outer pattern can be modified to include the inner pattern","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1535,"byte_end":1536,"line_start":68,"line_end":68,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"                if let Abstract::Var(v) = $abs {","highlight_start":38,"highlight_end":39}],"label":"replace this binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":6274,"byte_end":6317,"line_start":206,"line_end":206,"column_start":32,"column_end":75,"is_primary":false,"text":[{"text":"                            if unpack_var!(Linear, stack.front().unwrap()) > 0.0 {","highlight_start":32,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":1574,"byte_end":1590,"line_start":69,"line_end":69,"column_start":28,"column_end":44,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":28,"highlight_end":44}],"label":"with this pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":6274,"byte_end":6317,"line_start":206,"line_end":206,"column_start":32,"column_end":75,"is_primary":false,"text":[{"text":"                            if unpack_var!(Linear, stack.front().unwrap()) > 0.0 {","highlight_start":32,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::collapsible_match)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `if let` can be collapsed into the outer `if let`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:69:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    else {panic!(\"test\")}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m206\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                            if unpack_var!(Linear, stack.front().unwrap()) > 0.0 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the outer pattern can be modified to include the inner pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:68:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if let Abstract::Var(v) = $abs {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mreplace this binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwith this pattern\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m206\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                            if unpack_var!(Linear, stack.front().unwrap()) > 0.0 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::collapsible_match)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `unpack_var` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `match` can be collapsed into the outer `match`","code":{"code":"clippy::collapsible_match","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":7122,"byte_end":7356,"line_start":230,"line_end":236,"column_start":32,"column_end":22,"is_primary":true,"text":[{"text":"                    Some(a) => match a {","highlight_start":32,"highlight_end":41},{"text":"                        Abstract::Operator(o) => match o {","highlight_start":1,"highlight_end":59},{"text":"                            b'[' => false,","highlight_start":1,"highlight_end":43},{"text":"                            _ => true,","highlight_start":1,"highlight_end":39},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        _ => true,","highlight_start":1,"highlight_end":35},{"text":"                    },","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the outer pattern can be modified to include the inner pattern","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":7116,"byte_end":7117,"line_start":230,"line_end":230,"column_start":26,"column_end":27,"is_primary":true,"text":[{"text":"                    Some(a) => match a {","highlight_start":26,"highlight_end":27}],"label":"replace this binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":7156,"byte_end":7177,"line_start":231,"line_end":231,"column_start":25,"column_end":46,"is_primary":true,"text":[{"text":"                        Abstract::Operator(o) => match o {","highlight_start":25,"highlight_end":46}],"label":"with this pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `match` can be collapsed into the outer `match`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:230:32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    Some(a) => match a {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m231\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        Abstract::Operator(o) => match o {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m232\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                            b'[' => false,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m233\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                            _ => true,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m234\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        },\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m235\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        _ => true,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m236\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    },\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____________________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the outer pattern can be modified to include the inner pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:230:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    Some(a) => match a {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mreplace this binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m231\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        Abstract::Operator(o) => match o {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwith this pattern\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `match` can be collapsed into the outer `match`","code":{"code":"clippy::collapsible_match","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":7181,"byte_end":7298,"line_start":231,"line_end":234,"column_start":50,"column_end":26,"is_primary":true,"text":[{"text":"                        Abstract::Operator(o) => match o {","highlight_start":50,"highlight_end":59},{"text":"                            b'[' => false,","highlight_start":1,"highlight_end":43},{"text":"                            _ => true,","highlight_start":1,"highlight_end":39},{"text":"                        },","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the outer pattern can be modified to include the inner pattern","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":7175,"byte_end":7176,"line_start":231,"line_end":231,"column_start":44,"column_end":45,"is_primary":true,"text":[{"text":"                        Abstract::Operator(o) => match o {","highlight_start":44,"highlight_end":45}],"label":"replace this binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":7219,"byte_end":7223,"line_start":232,"line_end":232,"column_start":29,"column_end":33,"is_primary":true,"text":[{"text":"                            b'[' => false,","highlight_start":29,"highlight_end":33}],"label":"with this pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `match` can be collapsed into the outer `match`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:231:50\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m231\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                        Abstract::Operator(o) => match o {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m__________________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m232\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                            b'[' => false,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m233\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                            _ => true,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m234\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        },\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the outer pattern can be modified to include the inner pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:231:44\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m231\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        Abstract::Operator(o) => match o {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mreplace this binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m232\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                            b'[' => false,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwith this pattern\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"match expression looks like `matches!` macro","code":{"code":"clippy::match_like_matches_macro","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":7181,"byte_end":7298,"line_start":231,"line_end":234,"column_start":50,"column_end":26,"is_primary":true,"text":[{"text":"                        Abstract::Operator(o) => match o {","highlight_start":50,"highlight_end":59},{"text":"                            b'[' => false,","highlight_start":1,"highlight_end":43},{"text":"                            _ => true,","highlight_start":1,"highlight_end":39},{"text":"                        },","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::match_like_matches_macro)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":7181,"byte_end":7298,"line_start":231,"line_end":234,"column_start":50,"column_end":26,"is_primary":true,"text":[{"text":"                        Abstract::Operator(o) => match o {","highlight_start":50,"highlight_end":59},{"text":"                            b'[' => false,","highlight_start":1,"highlight_end":43},{"text":"                            _ => true,","highlight_start":1,"highlight_end":39},{"text":"                        },","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":"!matches!(o, b'[')","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: match expression looks like `matches!` macro\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:231:50\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m231\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                        Abstract::Operator(o) => match o {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m__________________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m232\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                            b'[' => false,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m233\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                            _ => true,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m234\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        },\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try: `!matches!(o, b'[')`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::match_like_matches_macro)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `match` can be collapsed into the outer `match`","code":{"code":"clippy::collapsible_match","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":9544,"byte_end":9662,"line_start":308,"line_end":311,"column_start":32,"column_end":22,"is_primary":true,"text":[{"text":"                    Some(a) => match a {","highlight_start":32,"highlight_end":41},{"text":"                        Abstract::Var(v) => v,","highlight_start":1,"highlight_end":47},{"text":"                        _ => Var::Void,","highlight_start":1,"highlight_end":40},{"text":"                    },","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the outer pattern can be modified to include the inner pattern","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":9538,"byte_end":9539,"line_start":308,"line_end":308,"column_start":26,"column_end":27,"is_primary":true,"text":[{"text":"                    Some(a) => match a {","highlight_start":26,"highlight_end":27}],"label":"replace this binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":9578,"byte_end":9594,"line_start":309,"line_end":309,"column_start":25,"column_end":41,"is_primary":true,"text":[{"text":"                        Abstract::Var(v) => v,","highlight_start":25,"highlight_end":41}],"label":"with this pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `match` can be collapsed into the outer `match`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:308:32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m308\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    Some(a) => match a {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m309\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        Abstract::Var(v) => v,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m310\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        _ => Var::Void,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m311\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    },\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____________________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the outer pattern can be modified to include the inner pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:308:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m308\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    Some(a) => match a {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mreplace this binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m309\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        Abstract::Var(v) => v,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwith this pattern\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `if let` can be collapsed into the outer `if let`","code":{"code":"clippy::collapsible_match","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":1567,"byte_end":1670,"line_start":69,"line_end":71,"column_start":21,"column_end":42,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":21,"highlight_end":61},{"text":"                    ","highlight_start":1,"highlight_end":21},{"text":"                    else {panic!(\"test\")}","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":10248,"byte_end":10291,"line_start":332,"line_end":332,"column_start":41,"column_end":84,"is_primary":false,"text":[{"text":"                                        unpack_var!(Gestalt, stack.get(1).unwrap()),","highlight_start":41,"highlight_end":84}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the outer pattern can be modified to include the inner pattern","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1535,"byte_end":1536,"line_start":68,"line_end":68,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"                if let Abstract::Var(v) = $abs {","highlight_start":38,"highlight_end":39}],"label":"replace this binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":10248,"byte_end":10291,"line_start":332,"line_end":332,"column_start":41,"column_end":84,"is_primary":false,"text":[{"text":"                                        unpack_var!(Gestalt, stack.get(1).unwrap()),","highlight_start":41,"highlight_end":84}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":1574,"byte_end":1590,"line_start":69,"line_end":69,"column_start":28,"column_end":44,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":28,"highlight_end":44}],"label":"with this pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":10248,"byte_end":10291,"line_start":332,"line_end":332,"column_start":41,"column_end":84,"is_primary":false,"text":[{"text":"                                        unpack_var!(Gestalt, stack.get(1).unwrap()),","highlight_start":41,"highlight_end":84}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `if let` can be collapsed into the outer `if let`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:69:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    else {panic!(\"test\")}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m332\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                                        unpack_var!(Gestalt, stack.get(1).unwrap()),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the outer pattern can be modified to include the inner pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:68:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if let Abstract::Var(v) = $abs {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mreplace this binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwith this pattern\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m332\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                        unpack_var!(Gestalt, stack.get(1).unwrap()),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `unpack_var` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `if let` can be collapsed into the outer `if let`","code":{"code":"clippy::collapsible_match","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":1567,"byte_end":1670,"line_start":69,"line_end":71,"column_start":21,"column_end":42,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":21,"highlight_end":61},{"text":"                    ","highlight_start":1,"highlight_end":21},{"text":"                    else {panic!(\"test\")}","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2163,"byte_end":2205,"line_start":92,"line_end":92,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($atype, stack.get(1).unwrap()),","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":10934,"byte_end":10995,"line_start":349,"line_end":349,"column_start":33,"column_end":94,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a+b}));","highlight_start":33,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the outer pattern can be modified to include the inner pattern","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1535,"byte_end":1536,"line_start":68,"line_end":68,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"                if let Abstract::Var(v) = $abs {","highlight_start":38,"highlight_end":39}],"label":"replace this binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2163,"byte_end":2205,"line_start":92,"line_end":92,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($atype, stack.get(1).unwrap()),","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":10934,"byte_end":10995,"line_start":349,"line_end":349,"column_start":33,"column_end":94,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a+b}));","highlight_start":33,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":1574,"byte_end":1590,"line_start":69,"line_end":69,"column_start":28,"column_end":44,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":28,"highlight_end":44}],"label":"with this pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2163,"byte_end":2205,"line_start":92,"line_end":92,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($atype, stack.get(1).unwrap()),","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":10934,"byte_end":10995,"line_start":349,"line_end":349,"column_start":33,"column_end":94,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a+b}));","highlight_start":33,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `if let` can be collapsed into the outer `if let`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:69:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    else {panic!(\"test\")}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m349\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a+b}));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the outer pattern can be modified to include the inner pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:68:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if let Abstract::Var(v) = $abs {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mreplace this binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwith this pattern\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m349\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a+b}));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `unpack_var` which comes from the expansion of the macro `operate` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `if let` can be collapsed into the outer `if let`","code":{"code":"clippy::collapsible_match","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":1567,"byte_end":1670,"line_start":69,"line_end":71,"column_start":21,"column_end":42,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":21,"highlight_end":61},{"text":"                    ","highlight_start":1,"highlight_end":21},{"text":"                    else {panic!(\"test\")}","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2227,"byte_end":2269,"line_start":93,"line_end":93,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($btype, stack.get(0).unwrap())","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":10934,"byte_end":10995,"line_start":349,"line_end":349,"column_start":33,"column_end":94,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a+b}));","highlight_start":33,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the outer pattern can be modified to include the inner pattern","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1535,"byte_end":1536,"line_start":68,"line_end":68,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"                if let Abstract::Var(v) = $abs {","highlight_start":38,"highlight_end":39}],"label":"replace this binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2227,"byte_end":2269,"line_start":93,"line_end":93,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($btype, stack.get(0).unwrap())","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":10934,"byte_end":10995,"line_start":349,"line_end":349,"column_start":33,"column_end":94,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a+b}));","highlight_start":33,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":1574,"byte_end":1590,"line_start":69,"line_end":69,"column_start":28,"column_end":44,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":28,"highlight_end":44}],"label":"with this pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2227,"byte_end":2269,"line_start":93,"line_end":93,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($btype, stack.get(0).unwrap())","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":10934,"byte_end":10995,"line_start":349,"line_end":349,"column_start":33,"column_end":94,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a+b}));","highlight_start":33,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `if let` can be collapsed into the outer `if let`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:69:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    else {panic!(\"test\")}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m349\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a+b}));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the outer pattern can be modified to include the inner pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:68:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if let Abstract::Var(v) = $abs {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mreplace this binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwith this pattern\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m349\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a+b}));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `unpack_var` which comes from the expansion of the macro `operate` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `if let` can be collapsed into the outer `if let`","code":{"code":"clippy::collapsible_match","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":1567,"byte_end":1670,"line_start":69,"line_end":71,"column_start":21,"column_end":42,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":21,"highlight_end":61},{"text":"                    ","highlight_start":1,"highlight_end":21},{"text":"                    else {panic!(\"test\")}","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2163,"byte_end":2205,"line_start":92,"line_end":92,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($atype, stack.get(1).unwrap()),","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":11139,"byte_end":11200,"line_start":353,"line_end":353,"column_start":33,"column_end":94,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a-b}));","highlight_start":33,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the outer pattern can be modified to include the inner pattern","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1535,"byte_end":1536,"line_start":68,"line_end":68,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"                if let Abstract::Var(v) = $abs {","highlight_start":38,"highlight_end":39}],"label":"replace this binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2163,"byte_end":2205,"line_start":92,"line_end":92,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($atype, stack.get(1).unwrap()),","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":11139,"byte_end":11200,"line_start":353,"line_end":353,"column_start":33,"column_end":94,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a-b}));","highlight_start":33,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":1574,"byte_end":1590,"line_start":69,"line_end":69,"column_start":28,"column_end":44,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":28,"highlight_end":44}],"label":"with this pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2163,"byte_end":2205,"line_start":92,"line_end":92,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($atype, stack.get(1).unwrap()),","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":11139,"byte_end":11200,"line_start":353,"line_end":353,"column_start":33,"column_end":94,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a-b}));","highlight_start":33,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `if let` can be collapsed into the outer `if let`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:69:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    else {panic!(\"test\")}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m353\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a-b}));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the outer pattern can be modified to include the inner pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:68:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if let Abstract::Var(v) = $abs {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mreplace this binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwith this pattern\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m353\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a-b}));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `unpack_var` which comes from the expansion of the macro `operate` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `if let` can be collapsed into the outer `if let`","code":{"code":"clippy::collapsible_match","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":1567,"byte_end":1670,"line_start":69,"line_end":71,"column_start":21,"column_end":42,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":21,"highlight_end":61},{"text":"                    ","highlight_start":1,"highlight_end":21},{"text":"                    else {panic!(\"test\")}","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2227,"byte_end":2269,"line_start":93,"line_end":93,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($btype, stack.get(0).unwrap())","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":11139,"byte_end":11200,"line_start":353,"line_end":353,"column_start":33,"column_end":94,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a-b}));","highlight_start":33,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the outer pattern can be modified to include the inner pattern","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1535,"byte_end":1536,"line_start":68,"line_end":68,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"                if let Abstract::Var(v) = $abs {","highlight_start":38,"highlight_end":39}],"label":"replace this binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2227,"byte_end":2269,"line_start":93,"line_end":93,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($btype, stack.get(0).unwrap())","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":11139,"byte_end":11200,"line_start":353,"line_end":353,"column_start":33,"column_end":94,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a-b}));","highlight_start":33,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":1574,"byte_end":1590,"line_start":69,"line_end":69,"column_start":28,"column_end":44,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":28,"highlight_end":44}],"label":"with this pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2227,"byte_end":2269,"line_start":93,"line_end":93,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($btype, stack.get(0).unwrap())","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":11139,"byte_end":11200,"line_start":353,"line_end":353,"column_start":33,"column_end":94,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a-b}));","highlight_start":33,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `if let` can be collapsed into the outer `if let`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:69:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    else {panic!(\"test\")}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m353\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a-b}));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the outer pattern can be modified to include the inner pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:68:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if let Abstract::Var(v) = $abs {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mreplace this binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwith this pattern\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m353\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a-b}));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `unpack_var` which comes from the expansion of the macro `operate` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `if let` can be collapsed into the outer `if let`","code":{"code":"clippy::collapsible_match","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":1567,"byte_end":1670,"line_start":69,"line_end":71,"column_start":21,"column_end":42,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":21,"highlight_end":61},{"text":"                    ","highlight_start":1,"highlight_end":21},{"text":"                    else {panic!(\"test\")}","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2163,"byte_end":2205,"line_start":92,"line_end":92,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($atype, stack.get(1).unwrap()),","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":11347,"byte_end":11408,"line_start":357,"line_end":357,"column_start":33,"column_end":94,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a*b}));","highlight_start":33,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the outer pattern can be modified to include the inner pattern","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1535,"byte_end":1536,"line_start":68,"line_end":68,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"                if let Abstract::Var(v) = $abs {","highlight_start":38,"highlight_end":39}],"label":"replace this binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2163,"byte_end":2205,"line_start":92,"line_end":92,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($atype, stack.get(1).unwrap()),","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":11347,"byte_end":11408,"line_start":357,"line_end":357,"column_start":33,"column_end":94,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a*b}));","highlight_start":33,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":1574,"byte_end":1590,"line_start":69,"line_end":69,"column_start":28,"column_end":44,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":28,"highlight_end":44}],"label":"with this pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2163,"byte_end":2205,"line_start":92,"line_end":92,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($atype, stack.get(1).unwrap()),","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":11347,"byte_end":11408,"line_start":357,"line_end":357,"column_start":33,"column_end":94,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a*b}));","highlight_start":33,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `if let` can be collapsed into the outer `if let`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:69:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    else {panic!(\"test\")}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m357\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a*b}));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the outer pattern can be modified to include the inner pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:68:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if let Abstract::Var(v) = $abs {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mreplace this binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwith this pattern\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m357\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a*b}));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `unpack_var` which comes from the expansion of the macro `operate` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `if let` can be collapsed into the outer `if let`","code":{"code":"clippy::collapsible_match","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":1567,"byte_end":1670,"line_start":69,"line_end":71,"column_start":21,"column_end":42,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":21,"highlight_end":61},{"text":"                    ","highlight_start":1,"highlight_end":21},{"text":"                    else {panic!(\"test\")}","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2227,"byte_end":2269,"line_start":93,"line_end":93,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($btype, stack.get(0).unwrap())","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":11347,"byte_end":11408,"line_start":357,"line_end":357,"column_start":33,"column_end":94,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a*b}));","highlight_start":33,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the outer pattern can be modified to include the inner pattern","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1535,"byte_end":1536,"line_start":68,"line_end":68,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"                if let Abstract::Var(v) = $abs {","highlight_start":38,"highlight_end":39}],"label":"replace this binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2227,"byte_end":2269,"line_start":93,"line_end":93,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($btype, stack.get(0).unwrap())","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":11347,"byte_end":11408,"line_start":357,"line_end":357,"column_start":33,"column_end":94,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a*b}));","highlight_start":33,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":1574,"byte_end":1590,"line_start":69,"line_end":69,"column_start":28,"column_end":44,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":28,"highlight_end":44}],"label":"with this pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2227,"byte_end":2269,"line_start":93,"line_end":93,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($btype, stack.get(0).unwrap())","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":11347,"byte_end":11408,"line_start":357,"line_end":357,"column_start":33,"column_end":94,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a*b}));","highlight_start":33,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `if let` can be collapsed into the outer `if let`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:69:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    else {panic!(\"test\")}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m357\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a*b}));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the outer pattern can be modified to include the inner pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:68:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if let Abstract::Var(v) = $abs {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mreplace this binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwith this pattern\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m357\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a*b}));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `unpack_var` which comes from the expansion of the macro `operate` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `if let` can be collapsed into the outer `if let`","code":{"code":"clippy::collapsible_match","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":1567,"byte_end":1670,"line_start":69,"line_end":71,"column_start":21,"column_end":42,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":21,"highlight_end":61},{"text":"                    ","highlight_start":1,"highlight_end":21},{"text":"                    else {panic!(\"test\")}","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2163,"byte_end":2205,"line_start":92,"line_end":92,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($atype, stack.get(1).unwrap()),","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":11549,"byte_end":11610,"line_start":361,"line_end":361,"column_start":33,"column_end":94,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a/b}));","highlight_start":33,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the outer pattern can be modified to include the inner pattern","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1535,"byte_end":1536,"line_start":68,"line_end":68,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"                if let Abstract::Var(v) = $abs {","highlight_start":38,"highlight_end":39}],"label":"replace this binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2163,"byte_end":2205,"line_start":92,"line_end":92,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($atype, stack.get(1).unwrap()),","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":11549,"byte_end":11610,"line_start":361,"line_end":361,"column_start":33,"column_end":94,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a/b}));","highlight_start":33,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":1574,"byte_end":1590,"line_start":69,"line_end":69,"column_start":28,"column_end":44,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":28,"highlight_end":44}],"label":"with this pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2163,"byte_end":2205,"line_start":92,"line_end":92,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($atype, stack.get(1).unwrap()),","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":11549,"byte_end":11610,"line_start":361,"line_end":361,"column_start":33,"column_end":94,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a/b}));","highlight_start":33,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `if let` can be collapsed into the outer `if let`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:69:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    else {panic!(\"test\")}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m361\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a/b}));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the outer pattern can be modified to include the inner pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:68:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if let Abstract::Var(v) = $abs {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mreplace this binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwith this pattern\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m361\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a/b}));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `unpack_var` which comes from the expansion of the macro `operate` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `if let` can be collapsed into the outer `if let`","code":{"code":"clippy::collapsible_match","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":1567,"byte_end":1670,"line_start":69,"line_end":71,"column_start":21,"column_end":42,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":21,"highlight_end":61},{"text":"                    ","highlight_start":1,"highlight_end":21},{"text":"                    else {panic!(\"test\")}","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2227,"byte_end":2269,"line_start":93,"line_end":93,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($btype, stack.get(0).unwrap())","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":11549,"byte_end":11610,"line_start":361,"line_end":361,"column_start":33,"column_end":94,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a/b}));","highlight_start":33,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the outer pattern can be modified to include the inner pattern","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1535,"byte_end":1536,"line_start":68,"line_end":68,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"                if let Abstract::Var(v) = $abs {","highlight_start":38,"highlight_end":39}],"label":"replace this binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2227,"byte_end":2269,"line_start":93,"line_end":93,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($btype, stack.get(0).unwrap())","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":11549,"byte_end":11610,"line_start":361,"line_end":361,"column_start":33,"column_end":94,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a/b}));","highlight_start":33,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":1574,"byte_end":1590,"line_start":69,"line_end":69,"column_start":28,"column_end":44,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":28,"highlight_end":44}],"label":"with this pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2227,"byte_end":2269,"line_start":93,"line_end":93,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($btype, stack.get(0).unwrap())","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":11549,"byte_end":11610,"line_start":361,"line_end":361,"column_start":33,"column_end":94,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a/b}));","highlight_start":33,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `if let` can be collapsed into the outer `if let`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:69:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    else {panic!(\"test\")}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m361\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a/b}));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the outer pattern can be modified to include the inner pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:68:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if let Abstract::Var(v) = $abs {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mreplace this binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwith this pattern\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m361\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a/b}));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `unpack_var` which comes from the expansion of the macro `operate` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `if let` can be collapsed into the outer `if let`","code":{"code":"clippy::collapsible_match","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":1567,"byte_end":1670,"line_start":69,"line_end":71,"column_start":21,"column_end":42,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":21,"highlight_end":61},{"text":"                    ","highlight_start":1,"highlight_end":21},{"text":"                    else {panic!(\"test\")}","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2163,"byte_end":2205,"line_start":92,"line_end":92,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($atype, stack.get(1).unwrap()),","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":11757,"byte_end":11824,"line_start":365,"line_end":365,"column_start":33,"column_end":100,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a.powf(b)}));","highlight_start":33,"highlight_end":100}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the outer pattern can be modified to include the inner pattern","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1535,"byte_end":1536,"line_start":68,"line_end":68,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"                if let Abstract::Var(v) = $abs {","highlight_start":38,"highlight_end":39}],"label":"replace this binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2163,"byte_end":2205,"line_start":92,"line_end":92,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($atype, stack.get(1).unwrap()),","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":11757,"byte_end":11824,"line_start":365,"line_end":365,"column_start":33,"column_end":100,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a.powf(b)}));","highlight_start":33,"highlight_end":100}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":1574,"byte_end":1590,"line_start":69,"line_end":69,"column_start":28,"column_end":44,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":28,"highlight_end":44}],"label":"with this pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2163,"byte_end":2205,"line_start":92,"line_end":92,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($atype, stack.get(1).unwrap()),","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":11757,"byte_end":11824,"line_start":365,"line_end":365,"column_start":33,"column_end":100,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a.powf(b)}));","highlight_start":33,"highlight_end":100}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `if let` can be collapsed into the outer `if let`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:69:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    else {panic!(\"test\")}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m365\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a.powf(b)}));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the outer pattern can be modified to include the inner pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:68:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if let Abstract::Var(v) = $abs {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mreplace this binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwith this pattern\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m365\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a.powf(b)}));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `unpack_var` which comes from the expansion of the macro `operate` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `if let` can be collapsed into the outer `if let`","code":{"code":"clippy::collapsible_match","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":1567,"byte_end":1670,"line_start":69,"line_end":71,"column_start":21,"column_end":42,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":21,"highlight_end":61},{"text":"                    ","highlight_start":1,"highlight_end":21},{"text":"                    else {panic!(\"test\")}","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2227,"byte_end":2269,"line_start":93,"line_end":93,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($btype, stack.get(0).unwrap())","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":11757,"byte_end":11824,"line_start":365,"line_end":365,"column_start":33,"column_end":100,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a.powf(b)}));","highlight_start":33,"highlight_end":100}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the outer pattern can be modified to include the inner pattern","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1535,"byte_end":1536,"line_start":68,"line_end":68,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"                if let Abstract::Var(v) = $abs {","highlight_start":38,"highlight_end":39}],"label":"replace this binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2227,"byte_end":2269,"line_start":93,"line_end":93,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($btype, stack.get(0).unwrap())","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":11757,"byte_end":11824,"line_start":365,"line_end":365,"column_start":33,"column_end":100,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a.powf(b)}));","highlight_start":33,"highlight_end":100}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":1574,"byte_end":1590,"line_start":69,"line_end":69,"column_start":28,"column_end":44,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":28,"highlight_end":44}],"label":"with this pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2227,"byte_end":2269,"line_start":93,"line_end":93,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($btype, stack.get(0).unwrap())","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":11757,"byte_end":11824,"line_start":365,"line_end":365,"column_start":33,"column_end":100,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a.powf(b)}));","highlight_start":33,"highlight_end":100}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `if let` can be collapsed into the outer `if let`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:69:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    else {panic!(\"test\")}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m365\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a.powf(b)}));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the outer pattern can be modified to include the inner pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:68:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if let Abstract::Var(v) = $abs {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mreplace this binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwith this pattern\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m365\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{a.powf(b)}));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `unpack_var` which comes from the expansion of the macro `operate` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `if let` can be collapsed into the outer `if let`","code":{"code":"clippy::collapsible_match","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":1567,"byte_end":1670,"line_start":69,"line_end":71,"column_start":21,"column_end":42,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":21,"highlight_end":61},{"text":"                    ","highlight_start":1,"highlight_end":21},{"text":"                    else {panic!(\"test\")}","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2163,"byte_end":2205,"line_start":92,"line_end":92,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($atype, stack.get(1).unwrap()),","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":12000,"byte_end":12245,"line_start":372,"line_end":376,"column_start":33,"column_end":36,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{","highlight_start":33,"highlight_end":88},{"text":"                                    booltolin(","highlight_start":1,"highlight_end":47},{"text":"                                        lintobool(a) && lintobool(b)","highlight_start":1,"highlight_end":69},{"text":"                                    )","highlight_start":1,"highlight_end":38},{"text":"                                }))","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the outer pattern can be modified to include the inner pattern","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1535,"byte_end":1536,"line_start":68,"line_end":68,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"                if let Abstract::Var(v) = $abs {","highlight_start":38,"highlight_end":39}],"label":"replace this binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2163,"byte_end":2205,"line_start":92,"line_end":92,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($atype, stack.get(1).unwrap()),","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":12000,"byte_end":12245,"line_start":372,"line_end":376,"column_start":33,"column_end":36,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{","highlight_start":33,"highlight_end":88},{"text":"                                    booltolin(","highlight_start":1,"highlight_end":47},{"text":"                                        lintobool(a) && lintobool(b)","highlight_start":1,"highlight_end":69},{"text":"                                    )","highlight_start":1,"highlight_end":38},{"text":"                                }))","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":1574,"byte_end":1590,"line_start":69,"line_end":69,"column_start":28,"column_end":44,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":28,"highlight_end":44}],"label":"with this pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2163,"byte_end":2205,"line_start":92,"line_end":92,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($atype, stack.get(1).unwrap()),","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":12000,"byte_end":12245,"line_start":372,"line_end":376,"column_start":33,"column_end":36,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{","highlight_start":33,"highlight_end":88},{"text":"                                    booltolin(","highlight_start":1,"highlight_end":47},{"text":"                                        lintobool(a) && lintobool(b)","highlight_start":1,"highlight_end":69},{"text":"                                    )","highlight_start":1,"highlight_end":38},{"text":"                                }))","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `if let` can be collapsed into the outer `if let`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:69:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    else {panic!(\"test\")}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m372\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m373\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    booltolin(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m374\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                        lintobool(a) && lintobool(b)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m375\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    )\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m376\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                }))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|___________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the outer pattern can be modified to include the inner pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:68:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                if let Abstract::Var(v) = $abs {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mreplace this binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwith this pattern\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m372\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m373\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    booltolin(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m374\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                        lintobool(a) && lintobool(b)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m375\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    )\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m376\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                }))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|___________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `unpack_var` which comes from the expansion of the macro `operate` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `if let` can be collapsed into the outer `if let`","code":{"code":"clippy::collapsible_match","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":1567,"byte_end":1670,"line_start":69,"line_end":71,"column_start":21,"column_end":42,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":21,"highlight_end":61},{"text":"                    ","highlight_start":1,"highlight_end":21},{"text":"                    else {panic!(\"test\")}","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2227,"byte_end":2269,"line_start":93,"line_end":93,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($btype, stack.get(0).unwrap())","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":12000,"byte_end":12245,"line_start":372,"line_end":376,"column_start":33,"column_end":36,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{","highlight_start":33,"highlight_end":88},{"text":"                                    booltolin(","highlight_start":1,"highlight_end":47},{"text":"                                        lintobool(a) && lintobool(b)","highlight_start":1,"highlight_end":69},{"text":"                                    )","highlight_start":1,"highlight_end":38},{"text":"                                }))","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the outer pattern can be modified to include the inner pattern","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1535,"byte_end":1536,"line_start":68,"line_end":68,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"                if let Abstract::Var(v) = $abs {","highlight_start":38,"highlight_end":39}],"label":"replace this binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2227,"byte_end":2269,"line_start":93,"line_end":93,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($btype, stack.get(0).unwrap())","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":12000,"byte_end":12245,"line_start":372,"line_end":376,"column_start":33,"column_end":36,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{","highlight_start":33,"highlight_end":88},{"text":"                                    booltolin(","highlight_start":1,"highlight_end":47},{"text":"                                        lintobool(a) && lintobool(b)","highlight_start":1,"highlight_end":69},{"text":"                                    )","highlight_start":1,"highlight_end":38},{"text":"                                }))","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":1574,"byte_end":1590,"line_start":69,"line_end":69,"column_start":28,"column_end":44,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":28,"highlight_end":44}],"label":"with this pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2227,"byte_end":2269,"line_start":93,"line_end":93,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($btype, stack.get(0).unwrap())","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":12000,"byte_end":12245,"line_start":372,"line_end":376,"column_start":33,"column_end":36,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{","highlight_start":33,"highlight_end":88},{"text":"                                    booltolin(","highlight_start":1,"highlight_end":47},{"text":"                                        lintobool(a) && lintobool(b)","highlight_start":1,"highlight_end":69},{"text":"                                    )","highlight_start":1,"highlight_end":38},{"text":"                                }))","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `if let` can be collapsed into the outer `if let`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:69:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    else {panic!(\"test\")}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m372\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m373\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    booltolin(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m374\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                        lintobool(a) && lintobool(b)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m375\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    )\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m376\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                }))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|___________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the outer pattern can be modified to include the inner pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:68:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                if let Abstract::Var(v) = $abs {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mreplace this binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwith this pattern\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m372\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m373\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    booltolin(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m374\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                        lintobool(a) && lintobool(b)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m375\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    )\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m376\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                }))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|___________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `unpack_var` which comes from the expansion of the macro `operate` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `if let` can be collapsed into the outer `if let`","code":{"code":"clippy::collapsible_match","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":1567,"byte_end":1670,"line_start":69,"line_end":71,"column_start":21,"column_end":42,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":21,"highlight_end":61},{"text":"                    ","highlight_start":1,"highlight_end":21},{"text":"                    else {panic!(\"test\")}","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2163,"byte_end":2205,"line_start":92,"line_end":92,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($atype, stack.get(1).unwrap()),","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":12379,"byte_end":12624,"line_start":380,"line_end":384,"column_start":33,"column_end":36,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{","highlight_start":33,"highlight_end":88},{"text":"                                    booltolin(","highlight_start":1,"highlight_end":47},{"text":"                                        lintobool(a) || lintobool(b)","highlight_start":1,"highlight_end":69},{"text":"                                    )","highlight_start":1,"highlight_end":38},{"text":"                                }))","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the outer pattern can be modified to include the inner pattern","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1535,"byte_end":1536,"line_start":68,"line_end":68,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"                if let Abstract::Var(v) = $abs {","highlight_start":38,"highlight_end":39}],"label":"replace this binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2163,"byte_end":2205,"line_start":92,"line_end":92,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($atype, stack.get(1).unwrap()),","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":12379,"byte_end":12624,"line_start":380,"line_end":384,"column_start":33,"column_end":36,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{","highlight_start":33,"highlight_end":88},{"text":"                                    booltolin(","highlight_start":1,"highlight_end":47},{"text":"                                        lintobool(a) || lintobool(b)","highlight_start":1,"highlight_end":69},{"text":"                                    )","highlight_start":1,"highlight_end":38},{"text":"                                }))","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":1574,"byte_end":1590,"line_start":69,"line_end":69,"column_start":28,"column_end":44,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":28,"highlight_end":44}],"label":"with this pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2163,"byte_end":2205,"line_start":92,"line_end":92,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($atype, stack.get(1).unwrap()),","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":12379,"byte_end":12624,"line_start":380,"line_end":384,"column_start":33,"column_end":36,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{","highlight_start":33,"highlight_end":88},{"text":"                                    booltolin(","highlight_start":1,"highlight_end":47},{"text":"                                        lintobool(a) || lintobool(b)","highlight_start":1,"highlight_end":69},{"text":"                                    )","highlight_start":1,"highlight_end":38},{"text":"                                }))","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `if let` can be collapsed into the outer `if let`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:69:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    else {panic!(\"test\")}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m380\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m381\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    booltolin(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m382\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                        lintobool(a) || lintobool(b)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m383\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    )\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m384\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                }))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|___________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the outer pattern can be modified to include the inner pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:68:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                if let Abstract::Var(v) = $abs {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mreplace this binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwith this pattern\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m380\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m381\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    booltolin(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m382\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                        lintobool(a) || lintobool(b)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m383\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    )\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m384\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                }))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|___________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `unpack_var` which comes from the expansion of the macro `operate` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `if let` can be collapsed into the outer `if let`","code":{"code":"clippy::collapsible_match","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":1567,"byte_end":1670,"line_start":69,"line_end":71,"column_start":21,"column_end":42,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":21,"highlight_end":61},{"text":"                    ","highlight_start":1,"highlight_end":21},{"text":"                    else {panic!(\"test\")}","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2227,"byte_end":2269,"line_start":93,"line_end":93,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($btype, stack.get(0).unwrap())","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":12379,"byte_end":12624,"line_start":380,"line_end":384,"column_start":33,"column_end":36,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{","highlight_start":33,"highlight_end":88},{"text":"                                    booltolin(","highlight_start":1,"highlight_end":47},{"text":"                                        lintobool(a) || lintobool(b)","highlight_start":1,"highlight_end":69},{"text":"                                    )","highlight_start":1,"highlight_end":38},{"text":"                                }))","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the outer pattern can be modified to include the inner pattern","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1535,"byte_end":1536,"line_start":68,"line_end":68,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"                if let Abstract::Var(v) = $abs {","highlight_start":38,"highlight_end":39}],"label":"replace this binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2227,"byte_end":2269,"line_start":93,"line_end":93,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($btype, stack.get(0).unwrap())","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":12379,"byte_end":12624,"line_start":380,"line_end":384,"column_start":33,"column_end":36,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{","highlight_start":33,"highlight_end":88},{"text":"                                    booltolin(","highlight_start":1,"highlight_end":47},{"text":"                                        lintobool(a) || lintobool(b)","highlight_start":1,"highlight_end":69},{"text":"                                    )","highlight_start":1,"highlight_end":38},{"text":"                                }))","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":1574,"byte_end":1590,"line_start":69,"line_end":69,"column_start":28,"column_end":44,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":28,"highlight_end":44}],"label":"with this pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2227,"byte_end":2269,"line_start":93,"line_end":93,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($btype, stack.get(0).unwrap())","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":12379,"byte_end":12624,"line_start":380,"line_end":384,"column_start":33,"column_end":36,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{","highlight_start":33,"highlight_end":88},{"text":"                                    booltolin(","highlight_start":1,"highlight_end":47},{"text":"                                        lintobool(a) || lintobool(b)","highlight_start":1,"highlight_end":69},{"text":"                                    )","highlight_start":1,"highlight_end":38},{"text":"                                }))","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `if let` can be collapsed into the outer `if let`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:69:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    else {panic!(\"test\")}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m380\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m381\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    booltolin(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m382\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                        lintobool(a) || lintobool(b)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m383\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    )\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m384\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                }))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|___________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the outer pattern can be modified to include the inner pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:68:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                if let Abstract::Var(v) = $abs {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mreplace this binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwith this pattern\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m380\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m381\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    booltolin(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m382\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                        lintobool(a) || lintobool(b)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m383\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    )\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m384\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                }))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|___________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `unpack_var` which comes from the expansion of the macro `operate` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `if let` can be collapsed into the outer `if let`","code":{"code":"clippy::collapsible_match","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":1567,"byte_end":1670,"line_start":69,"line_end":71,"column_start":21,"column_end":42,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":21,"highlight_end":61},{"text":"                    ","highlight_start":1,"highlight_end":21},{"text":"                    else {panic!(\"test\")}","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2163,"byte_end":2205,"line_start":92,"line_end":92,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($atype, stack.get(1).unwrap()),","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":12811,"byte_end":13033,"line_start":391,"line_end":395,"column_start":33,"column_end":36,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{","highlight_start":33,"highlight_end":88},{"text":"                                    booltolin(","highlight_start":1,"highlight_end":47},{"text":"                                        a > b","highlight_start":1,"highlight_end":46},{"text":"                                    )","highlight_start":1,"highlight_end":38},{"text":"                                }))","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the outer pattern can be modified to include the inner pattern","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1535,"byte_end":1536,"line_start":68,"line_end":68,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"                if let Abstract::Var(v) = $abs {","highlight_start":38,"highlight_end":39}],"label":"replace this binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2163,"byte_end":2205,"line_start":92,"line_end":92,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($atype, stack.get(1).unwrap()),","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":12811,"byte_end":13033,"line_start":391,"line_end":395,"column_start":33,"column_end":36,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{","highlight_start":33,"highlight_end":88},{"text":"                                    booltolin(","highlight_start":1,"highlight_end":47},{"text":"                                        a > b","highlight_start":1,"highlight_end":46},{"text":"                                    )","highlight_start":1,"highlight_end":38},{"text":"                                }))","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":1574,"byte_end":1590,"line_start":69,"line_end":69,"column_start":28,"column_end":44,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":28,"highlight_end":44}],"label":"with this pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2163,"byte_end":2205,"line_start":92,"line_end":92,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($atype, stack.get(1).unwrap()),","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":12811,"byte_end":13033,"line_start":391,"line_end":395,"column_start":33,"column_end":36,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{","highlight_start":33,"highlight_end":88},{"text":"                                    booltolin(","highlight_start":1,"highlight_end":47},{"text":"                                        a > b","highlight_start":1,"highlight_end":46},{"text":"                                    )","highlight_start":1,"highlight_end":38},{"text":"                                }))","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `if let` can be collapsed into the outer `if let`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:69:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    else {panic!(\"test\")}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m391\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m392\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    booltolin(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m393\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                        a > b\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m394\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    )\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m395\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                }))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|___________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the outer pattern can be modified to include the inner pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:68:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                if let Abstract::Var(v) = $abs {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mreplace this binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwith this pattern\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m391\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m392\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    booltolin(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m393\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                        a > b\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m394\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    )\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m395\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                }))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|___________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `unpack_var` which comes from the expansion of the macro `operate` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `if let` can be collapsed into the outer `if let`","code":{"code":"clippy::collapsible_match","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":1567,"byte_end":1670,"line_start":69,"line_end":71,"column_start":21,"column_end":42,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":21,"highlight_end":61},{"text":"                    ","highlight_start":1,"highlight_end":21},{"text":"                    else {panic!(\"test\")}","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2227,"byte_end":2269,"line_start":93,"line_end":93,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($btype, stack.get(0).unwrap())","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":12811,"byte_end":13033,"line_start":391,"line_end":395,"column_start":33,"column_end":36,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{","highlight_start":33,"highlight_end":88},{"text":"                                    booltolin(","highlight_start":1,"highlight_end":47},{"text":"                                        a > b","highlight_start":1,"highlight_end":46},{"text":"                                    )","highlight_start":1,"highlight_end":38},{"text":"                                }))","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the outer pattern can be modified to include the inner pattern","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1535,"byte_end":1536,"line_start":68,"line_end":68,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"                if let Abstract::Var(v) = $abs {","highlight_start":38,"highlight_end":39}],"label":"replace this binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2227,"byte_end":2269,"line_start":93,"line_end":93,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($btype, stack.get(0).unwrap())","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":12811,"byte_end":13033,"line_start":391,"line_end":395,"column_start":33,"column_end":36,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{","highlight_start":33,"highlight_end":88},{"text":"                                    booltolin(","highlight_start":1,"highlight_end":47},{"text":"                                        a > b","highlight_start":1,"highlight_end":46},{"text":"                                    )","highlight_start":1,"highlight_end":38},{"text":"                                }))","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":1574,"byte_end":1590,"line_start":69,"line_end":69,"column_start":28,"column_end":44,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":28,"highlight_end":44}],"label":"with this pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2227,"byte_end":2269,"line_start":93,"line_end":93,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($btype, stack.get(0).unwrap())","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":12811,"byte_end":13033,"line_start":391,"line_end":395,"column_start":33,"column_end":36,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{","highlight_start":33,"highlight_end":88},{"text":"                                    booltolin(","highlight_start":1,"highlight_end":47},{"text":"                                        a > b","highlight_start":1,"highlight_end":46},{"text":"                                    )","highlight_start":1,"highlight_end":38},{"text":"                                }))","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `if let` can be collapsed into the outer `if let`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:69:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    else {panic!(\"test\")}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m391\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m392\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    booltolin(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m393\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                        a > b\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m394\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    )\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m395\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                }))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|___________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the outer pattern can be modified to include the inner pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:68:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                if let Abstract::Var(v) = $abs {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mreplace this binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwith this pattern\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m391\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m392\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    booltolin(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m393\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                        a > b\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m394\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    )\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m395\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                }))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|___________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `unpack_var` which comes from the expansion of the macro `operate` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `if let` can be collapsed into the outer `if let`","code":{"code":"clippy::collapsible_match","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":1567,"byte_end":1670,"line_start":69,"line_end":71,"column_start":21,"column_end":42,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":21,"highlight_end":61},{"text":"                    ","highlight_start":1,"highlight_end":21},{"text":"                    else {panic!(\"test\")}","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2163,"byte_end":2205,"line_start":92,"line_end":92,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($atype, stack.get(1).unwrap()),","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":13173,"byte_end":13396,"line_start":399,"line_end":403,"column_start":33,"column_end":36,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{","highlight_start":33,"highlight_end":88},{"text":"                                    booltolin(","highlight_start":1,"highlight_end":47},{"text":"                                        a == b","highlight_start":1,"highlight_end":47},{"text":"                                    )","highlight_start":1,"highlight_end":38},{"text":"                                }))","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the outer pattern can be modified to include the inner pattern","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1535,"byte_end":1536,"line_start":68,"line_end":68,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"                if let Abstract::Var(v) = $abs {","highlight_start":38,"highlight_end":39}],"label":"replace this binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2163,"byte_end":2205,"line_start":92,"line_end":92,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($atype, stack.get(1).unwrap()),","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":13173,"byte_end":13396,"line_start":399,"line_end":403,"column_start":33,"column_end":36,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{","highlight_start":33,"highlight_end":88},{"text":"                                    booltolin(","highlight_start":1,"highlight_end":47},{"text":"                                        a == b","highlight_start":1,"highlight_end":47},{"text":"                                    )","highlight_start":1,"highlight_end":38},{"text":"                                }))","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":1574,"byte_end":1590,"line_start":69,"line_end":69,"column_start":28,"column_end":44,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":28,"highlight_end":44}],"label":"with this pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2163,"byte_end":2205,"line_start":92,"line_end":92,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($atype, stack.get(1).unwrap()),","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":13173,"byte_end":13396,"line_start":399,"line_end":403,"column_start":33,"column_end":36,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{","highlight_start":33,"highlight_end":88},{"text":"                                    booltolin(","highlight_start":1,"highlight_end":47},{"text":"                                        a == b","highlight_start":1,"highlight_end":47},{"text":"                                    )","highlight_start":1,"highlight_end":38},{"text":"                                }))","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `if let` can be collapsed into the outer `if let`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:69:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    else {panic!(\"test\")}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m399\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m400\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    booltolin(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m401\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                        a == b\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m402\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    )\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m403\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                }))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|___________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the outer pattern can be modified to include the inner pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:68:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                if let Abstract::Var(v) = $abs {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mreplace this binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwith this pattern\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m399\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m400\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    booltolin(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m401\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                        a == b\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m402\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    )\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m403\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                }))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|___________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `unpack_var` which comes from the expansion of the macro `operate` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `if let` can be collapsed into the outer `if let`","code":{"code":"clippy::collapsible_match","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":1567,"byte_end":1670,"line_start":69,"line_end":71,"column_start":21,"column_end":42,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":21,"highlight_end":61},{"text":"                    ","highlight_start":1,"highlight_end":21},{"text":"                    else {panic!(\"test\")}","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2227,"byte_end":2269,"line_start":93,"line_end":93,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($btype, stack.get(0).unwrap())","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":13173,"byte_end":13396,"line_start":399,"line_end":403,"column_start":33,"column_end":36,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{","highlight_start":33,"highlight_end":88},{"text":"                                    booltolin(","highlight_start":1,"highlight_end":47},{"text":"                                        a == b","highlight_start":1,"highlight_end":47},{"text":"                                    )","highlight_start":1,"highlight_end":38},{"text":"                                }))","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the outer pattern can be modified to include the inner pattern","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1535,"byte_end":1536,"line_start":68,"line_end":68,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"                if let Abstract::Var(v) = $abs {","highlight_start":38,"highlight_end":39}],"label":"replace this binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2227,"byte_end":2269,"line_start":93,"line_end":93,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($btype, stack.get(0).unwrap())","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":13173,"byte_end":13396,"line_start":399,"line_end":403,"column_start":33,"column_end":36,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{","highlight_start":33,"highlight_end":88},{"text":"                                    booltolin(","highlight_start":1,"highlight_end":47},{"text":"                                        a == b","highlight_start":1,"highlight_end":47},{"text":"                                    )","highlight_start":1,"highlight_end":38},{"text":"                                }))","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":1574,"byte_end":1590,"line_start":69,"line_end":69,"column_start":28,"column_end":44,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":28,"highlight_end":44}],"label":"with this pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2227,"byte_end":2269,"line_start":93,"line_end":93,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($btype, stack.get(0).unwrap())","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":13173,"byte_end":13396,"line_start":399,"line_end":403,"column_start":33,"column_end":36,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{","highlight_start":33,"highlight_end":88},{"text":"                                    booltolin(","highlight_start":1,"highlight_end":47},{"text":"                                        a == b","highlight_start":1,"highlight_end":47},{"text":"                                    )","highlight_start":1,"highlight_end":38},{"text":"                                }))","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `if let` can be collapsed into the outer `if let`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:69:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    else {panic!(\"test\")}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m399\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m400\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    booltolin(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m401\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                        a == b\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m402\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    )\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m403\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                }))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|___________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the outer pattern can be modified to include the inner pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:68:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                if let Abstract::Var(v) = $abs {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mreplace this binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwith this pattern\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m399\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m400\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    booltolin(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m401\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                        a == b\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m402\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    )\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m403\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                }))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|___________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `unpack_var` which comes from the expansion of the macro `operate` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `if let` can be collapsed into the outer `if let`","code":{"code":"clippy::collapsible_match","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":1567,"byte_end":1670,"line_start":69,"line_end":71,"column_start":21,"column_end":42,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":21,"highlight_end":61},{"text":"                    ","highlight_start":1,"highlight_end":21},{"text":"                    else {panic!(\"test\")}","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2163,"byte_end":2205,"line_start":92,"line_end":92,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($atype, stack.get(1).unwrap()),","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":13537,"byte_end":13759,"line_start":407,"line_end":411,"column_start":33,"column_end":36,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{","highlight_start":33,"highlight_end":88},{"text":"                                    booltolin(","highlight_start":1,"highlight_end":47},{"text":"                                        a < b","highlight_start":1,"highlight_end":46},{"text":"                                    )","highlight_start":1,"highlight_end":38},{"text":"                                }))","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the outer pattern can be modified to include the inner pattern","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1535,"byte_end":1536,"line_start":68,"line_end":68,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"                if let Abstract::Var(v) = $abs {","highlight_start":38,"highlight_end":39}],"label":"replace this binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2163,"byte_end":2205,"line_start":92,"line_end":92,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($atype, stack.get(1).unwrap()),","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":13537,"byte_end":13759,"line_start":407,"line_end":411,"column_start":33,"column_end":36,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{","highlight_start":33,"highlight_end":88},{"text":"                                    booltolin(","highlight_start":1,"highlight_end":47},{"text":"                                        a < b","highlight_start":1,"highlight_end":46},{"text":"                                    )","highlight_start":1,"highlight_end":38},{"text":"                                }))","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":1574,"byte_end":1590,"line_start":69,"line_end":69,"column_start":28,"column_end":44,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":28,"highlight_end":44}],"label":"with this pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2163,"byte_end":2205,"line_start":92,"line_end":92,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($atype, stack.get(1).unwrap()),","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":13537,"byte_end":13759,"line_start":407,"line_end":411,"column_start":33,"column_end":36,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{","highlight_start":33,"highlight_end":88},{"text":"                                    booltolin(","highlight_start":1,"highlight_end":47},{"text":"                                        a < b","highlight_start":1,"highlight_end":46},{"text":"                                    )","highlight_start":1,"highlight_end":38},{"text":"                                }))","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `if let` can be collapsed into the outer `if let`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:69:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    else {panic!(\"test\")}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m407\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m408\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    booltolin(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m409\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                        a < b\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m410\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    )\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m411\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                }))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|___________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the outer pattern can be modified to include the inner pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:68:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                if let Abstract::Var(v) = $abs {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mreplace this binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwith this pattern\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m407\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m408\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    booltolin(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m409\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                        a < b\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m410\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    )\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m411\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                }))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|___________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `unpack_var` which comes from the expansion of the macro `operate` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `if let` can be collapsed into the outer `if let`","code":{"code":"clippy::collapsible_match","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":1567,"byte_end":1670,"line_start":69,"line_end":71,"column_start":21,"column_end":42,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":21,"highlight_end":61},{"text":"                    ","highlight_start":1,"highlight_end":21},{"text":"                    else {panic!(\"test\")}","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2227,"byte_end":2269,"line_start":93,"line_end":93,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($btype, stack.get(0).unwrap())","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":13537,"byte_end":13759,"line_start":407,"line_end":411,"column_start":33,"column_end":36,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{","highlight_start":33,"highlight_end":88},{"text":"                                    booltolin(","highlight_start":1,"highlight_end":47},{"text":"                                        a < b","highlight_start":1,"highlight_end":46},{"text":"                                    )","highlight_start":1,"highlight_end":38},{"text":"                                }))","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the outer pattern can be modified to include the inner pattern","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1535,"byte_end":1536,"line_start":68,"line_end":68,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"                if let Abstract::Var(v) = $abs {","highlight_start":38,"highlight_end":39}],"label":"replace this binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2227,"byte_end":2269,"line_start":93,"line_end":93,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($btype, stack.get(0).unwrap())","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":13537,"byte_end":13759,"line_start":407,"line_end":411,"column_start":33,"column_end":36,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{","highlight_start":33,"highlight_end":88},{"text":"                                    booltolin(","highlight_start":1,"highlight_end":47},{"text":"                                        a < b","highlight_start":1,"highlight_end":46},{"text":"                                    )","highlight_start":1,"highlight_end":38},{"text":"                                }))","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":1574,"byte_end":1590,"line_start":69,"line_end":69,"column_start":28,"column_end":44,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":28,"highlight_end":44}],"label":"with this pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2227,"byte_end":2269,"line_start":93,"line_end":93,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    unpack_var!($btype, stack.get(0).unwrap())","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":13537,"byte_end":13759,"line_start":407,"line_end":411,"column_start":33,"column_end":36,"is_primary":false,"text":[{"text":"                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{","highlight_start":33,"highlight_end":88},{"text":"                                    booltolin(","highlight_start":1,"highlight_end":47},{"text":"                                        a < b","highlight_start":1,"highlight_end":46},{"text":"                                    )","highlight_start":1,"highlight_end":38},{"text":"                                }))","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"operate!","def_site_span":{"file_name":"src/main.rs","byte_start":2000,"byte_end":2020,"line_start":88,"line_end":88,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    macro_rules! operate {","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `if let` can be collapsed into the outer `if let`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:69:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    else {panic!(\"test\")}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m407\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m408\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    booltolin(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m409\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                        a < b\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m410\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    )\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m411\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                }))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|___________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the outer pattern can be modified to include the inner pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:68:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                if let Abstract::Var(v) = $abs {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mreplace this binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwith this pattern\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m407\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                operate!(Linear, Linear, Linear (|a:f64, b:f64| -> f64{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m408\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    booltolin(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m409\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                        a < b\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m410\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    )\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m411\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                }))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|___________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `unpack_var` which comes from the expansion of the macro `operate` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `if let` can be collapsed into the outer `if let`","code":{"code":"clippy::collapsible_match","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":1567,"byte_end":1670,"line_start":69,"line_end":71,"column_start":21,"column_end":42,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":21,"highlight_end":61},{"text":"                    ","highlight_start":1,"highlight_end":21},{"text":"                    else {panic!(\"test\")}","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":13995,"byte_end":14038,"line_start":419,"line_end":419,"column_start":38,"column_end":81,"is_primary":false,"text":[{"text":"                                    &unpack_var!(Gestalt, stack.get(1).unwrap()),","highlight_start":38,"highlight_end":81}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the outer pattern can be modified to include the inner pattern","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1535,"byte_end":1536,"line_start":68,"line_end":68,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"                if let Abstract::Var(v) = $abs {","highlight_start":38,"highlight_end":39}],"label":"replace this binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":13995,"byte_end":14038,"line_start":419,"line_end":419,"column_start":38,"column_end":81,"is_primary":false,"text":[{"text":"                                    &unpack_var!(Gestalt, stack.get(1).unwrap()),","highlight_start":38,"highlight_end":81}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":1574,"byte_end":1590,"line_start":69,"line_end":69,"column_start":28,"column_end":44,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":28,"highlight_end":44}],"label":"with this pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":13995,"byte_end":14038,"line_start":419,"line_end":419,"column_start":38,"column_end":81,"is_primary":false,"text":[{"text":"                                    &unpack_var!(Gestalt, stack.get(1).unwrap()),","highlight_start":38,"highlight_end":81}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `if let` can be collapsed into the outer `if let`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:69:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    else {panic!(\"test\")}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m419\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                                    &unpack_var!(Gestalt, stack.get(1).unwrap()),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the outer pattern can be modified to include the inner pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:68:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if let Abstract::Var(v) = $abs {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mreplace this binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwith this pattern\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m419\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    &unpack_var!(Gestalt, stack.get(1).unwrap()),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `unpack_var` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this expression creates a reference which is immediately dereferenced by the compiler","code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":14167,"byte_end":14169,"line_start":421,"line_end":421,"column_start":61,"column_end":63,"is_primary":true,"text":[{"text":"                                        Abstract::Var(v) => &v,","highlight_start":61,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::needless_borrow)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":14167,"byte_end":14169,"line_start":421,"line_end":421,"column_start":61,"column_end":63,"is_primary":true,"text":[{"text":"                                        Abstract::Var(v) => &v,","highlight_start":61,"highlight_end":63}],"label":null,"suggested_replacement":"v","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this expression creates a reference which is immediately dereferenced by the compiler\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:421:61\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m421\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m                   Abstract::Var(v) => &v,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: change this to: `v`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::needless_borrow)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `if let` can be collapsed into the outer `if let`","code":{"code":"clippy::collapsible_match","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":1567,"byte_end":1670,"line_start":69,"line_end":71,"column_start":21,"column_end":42,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":21,"highlight_end":61},{"text":"                    ","highlight_start":1,"highlight_end":21},{"text":"                    else {panic!(\"test\")}","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":15578,"byte_end":15622,"line_start":455,"line_end":455,"column_start":32,"column_end":76,"is_primary":false,"text":[{"text":"                            if unpack_var!(Gestalt, stack.front().unwrap())","highlight_start":32,"highlight_end":76}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the outer pattern can be modified to include the inner pattern","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1535,"byte_end":1536,"line_start":68,"line_end":68,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"                if let Abstract::Var(v) = $abs {","highlight_start":38,"highlight_end":39}],"label":"replace this binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":15578,"byte_end":15622,"line_start":455,"line_end":455,"column_start":32,"column_end":76,"is_primary":false,"text":[{"text":"                            if unpack_var!(Gestalt, stack.front().unwrap())","highlight_start":32,"highlight_end":76}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":1574,"byte_end":1590,"line_start":69,"line_end":69,"column_start":28,"column_end":44,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":28,"highlight_end":44}],"label":"with this pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":15578,"byte_end":15622,"line_start":455,"line_end":455,"column_start":32,"column_end":76,"is_primary":false,"text":[{"text":"                            if unpack_var!(Gestalt, stack.front().unwrap())","highlight_start":32,"highlight_end":76}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `if let` can be collapsed into the outer `if let`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:69:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    else {panic!(\"test\")}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m455\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                            if unpack_var!(Gestalt, stack.front().unwrap())\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the outer pattern can be modified to include the inner pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:68:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if let Abstract::Var(v) = $abs {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mreplace this binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwith this pattern\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m455\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                            if unpack_var!(Gestalt, stack.front().unwrap())\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `unpack_var` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this `if let` can be collapsed into the outer `if let`","code":{"code":"clippy::collapsible_match","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":1567,"byte_end":1670,"line_start":69,"line_end":71,"column_start":21,"column_end":42,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":21,"highlight_end":61},{"text":"                    ","highlight_start":1,"highlight_end":21},{"text":"                    else {panic!(\"test\")}","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":15658,"byte_end":15701,"line_start":456,"line_end":456,"column_start":36,"column_end":79,"is_primary":false,"text":[{"text":"                                == unpack_var!(Gestalt, stack.get(1).unwrap())","highlight_start":36,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the outer pattern can be modified to include the inner pattern","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1535,"byte_end":1536,"line_start":68,"line_end":68,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"                if let Abstract::Var(v) = $abs {","highlight_start":38,"highlight_end":39}],"label":"replace this binding","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":15658,"byte_end":15701,"line_start":456,"line_end":456,"column_start":36,"column_end":79,"is_primary":false,"text":[{"text":"                                == unpack_var!(Gestalt, stack.get(1).unwrap())","highlight_start":36,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":1574,"byte_end":1590,"line_start":69,"line_end":69,"column_start":28,"column_end":44,"is_primary":true,"text":[{"text":"                    if let Var::$vartype(x) = v {x.clone()} ","highlight_start":28,"highlight_end":44}],"label":"with this pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":15658,"byte_end":15701,"line_start":456,"line_end":456,"column_start":36,"column_end":79,"is_primary":false,"text":[{"text":"                                == unpack_var!(Gestalt, stack.get(1).unwrap())","highlight_start":36,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"unpack_var!","def_site_span":{"file_name":"src/main.rs","byte_start":1420,"byte_end":1443,"line_start":65,"line_end":65,"column_start":5,"column_end":28,"is_primary":false,"text":[{"text":"    macro_rules! unpack_var {","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `if let` can be collapsed into the outer `if let`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:69:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    else {panic!(\"test\")}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m456\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                                == unpack_var!(Gestalt, stack.get(1).unwrap())\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the outer pattern can be modified to include the inner pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:68:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if let Abstract::Var(v) = $abs {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mreplace this binding\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Var::$vartype(x) = v {x.clone()} \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwith this pattern\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m456\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                == unpack_var!(Gestalt, stack.get(1).unwrap())\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `unpack_var` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this if-then-else expression returns a bool literal","code":{"code":"clippy::needless_bool","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":16663,"byte_end":16694,"line_start":483,"line_end":483,"column_start":5,"column_end":36,"is_primary":true,"text":[{"text":"    if linear>0.0 {true}else{false}","highlight_start":5,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_bool","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::needless_bool)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"you can reduce it to","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":16663,"byte_end":16694,"line_start":483,"line_end":483,"column_start":5,"column_end":36,"is_primary":true,"text":[{"text":"    if linear>0.0 {true}else{false}","highlight_start":5,"highlight_end":36}],"label":null,"suggested_replacement":"linear > 0.0","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this if-then-else expression returns a bool literal\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:483:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m483\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if linear>0.0 {true}else{false}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: you can reduce it to: `linear > 0.0`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_bool\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::needless_bool)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"writing `&Vec` instead of `&[_]` involves a new object where a slice will do","code":{"code":"clippy::ptr_arg","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":17128,"byte_end":17136,"line_start":500,"line_end":500,"column_start":31,"column_end":39,"is_primary":true,"text":[{"text":"fn find_bracket_pair(program: &Vec<u8>, mut on: usize) -> usize {","highlight_start":31,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::ptr_arg)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":17128,"byte_end":17136,"line_start":500,"line_end":500,"column_start":31,"column_end":39,"is_primary":true,"text":[{"text":"fn find_bracket_pair(program: &Vec<u8>, mut on: usize) -> usize {","highlight_start":31,"highlight_end":39}],"label":null,"suggested_replacement":"&[u8]","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:500:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m500\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn find_bracket_pair(program: &Vec<u8>, mut on: usize) -> usize {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: change this to: `&[u8]`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::ptr_arg)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"35 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 35 warnings emitted\u001b[0m\n\n"}
